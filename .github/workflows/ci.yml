name: CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]
  workflow_dispatch: {}

jobs:
  test:
    name: Install deps & run tests (${{ matrix.service }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        service: [backend, frontend, logger]
    defaults:
      run:
        working-directory: ${{ matrix.service }}
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pytest

      - name: Run tests if present
        run: |
          set -euo pipefail
          if compgen -G "tests/*.py" > /dev/null || \
             compgen -G "test_*.py" > /dev/null || \
             compgen -G "*_test.py" > /dev/null || \
             [ -d tests ]; then
            echo "Running pytest..."
            pytest -q
          else
            echo "No tests found for ${{ matrix.service }}. Skipping."
          fi

  build_and_push:
    name: Build & push Docker images (${{ matrix.service }})
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    strategy:
      fail-fast: false
      matrix:
        service: [backend, frontend, logger]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push ${{ matrix.service }}
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.service }}
          file: ${{ matrix.service }}/Dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service }}:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  notify:
    name: Notify on failure
    runs-on: ubuntu-latest
    needs: [test, build_and_push]
    if: always()
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
      - name: Send Slack alert
        if: ${{ failure() && env.SLACK_WEBHOOK_URL != '' }}
        run: |
          text="‚ùå CI failed for $GITHUB_REPOSITORY on $GITHUB_REF (run #$GITHUB_RUN_NUMBER). Commit: $GITHUB_SHA. https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"
          payload=$(printf '{"text":"%s"}' "${text//"/\"}")
          curl -X POST -H 'Content-Type: application/json' --data "$payload" "$SLACK_WEBHOOK_URL"
